name: go build & release

on:
  push:
    tags:
      - v*

jobs:
  setup-release:
    name: setup release
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Get url to upload to release from output
        env:
          url: ${{ steps.create_release.outputs.upload_url }}
        run: |
          mkdir artifact
          echo $url > artifact/url.txt
      - name: Upload artifact to share url with other jobs
        uses: actions/upload-artifact@v1
        with:
          name: artifact
          path: artifact/url.txt

  release-pkg:
    name: Release package
    needs: setup-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [mac64, lin64, win64]
        include:
          - os: mac64
            goos: darwin
            arch: amd64
          - os: lin64
            goos: linux
            arch: amd64

    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Build
        env:
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.arch }}
          BIN_NAME: gotree
        run: |
          BIN_VERSION=$(echo "${{ github.ref }}" | sed s%refs/tags/%%)
          GOOS=$goos GOARCH=$goarch go build -v -o ./bin/${BIN_NAME} -ldflags "-X main.version=${BIN_VERSION} -X main.name=${BIN_NAME}" .
          zip -j -r release bin
      - name: Download artifact to get url to upload to release
        uses: actions/download-artifact@v1
        with:
          name: artifact

      - name: Get url to upload to release from artifact
        id: get_url
        run: |
          url=$(cat artifact/url.txt)
          echo "##[set-output name=upload_url;]$url"
      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_url.outputs.upload_url }}
          asset_path: release.zip
          asset_name: release-${{ matrix.os }}.zip
          asset_content_type: application/zip
